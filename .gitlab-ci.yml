image: "artifactory.ad.sklk.us/gitlabdocker/skylark-wireless/software/sklk-phy-mod:latest"

default:
    before_script:
        - git submodule foreach --recursive git clean -d -f -f -x
        - mkdir -p scripts
        - jfrog config show ${ARTIFACTORY_SERVER_ID}
        - jfrog rt ping --server-id=${ARTIFACTORY_SERVER_ID} || (jfrog config rm ${ARTIFACTORY_SERVER_ID} --quiet && jfrog config add ${ARTIFACTORY_SERVER_ID} --artifactory-url=${ARTIFACTORY_URL} --user=${ARTIFACTORY_USER} --password=${ARTIFACTORY_PASS} --interactive=false)
        - jfrog config show ${ARTIFACTORY_SERVER_ID}
        - jfrog rt download sklk-scripts/packaging/jfrog_upload ${CI_PROJECT_DIR}/scripts/ --flat
        - test -f ${CI_PROJECT_DIR}/scripts/jfrog_upload && echo "jfrog_upload script found!" || echo "jfrog_upload script not found :("
        - chmod +x ${CI_PROJECT_DIR}/scripts/jfrog_upload

build-manual:
    stage: build
    tags:
        - docker
    script:
        # Don't install in Dockerfile, we want a recent version
        - apt -y update
        - apt install -y -qq sklk_mii sklk_json sklk_phy
        - mkdir build
        - cd build
        - cmake -D SKLK_PHY_MOD_ENABLE_DOCS=1 ..
        - make sklk-phy-mod-docs
        - cd docs/doxygen
        - make -C latex pdf
        - cp latex/refman.pdf ${CI_PROJECT_DIR}/sklk-phy-modding-manual.pdf
        - tar -vczf  sklk-phy-modding-manual-html.tar.gz html
        - cp sklk-phy-modding-manual-html.tar.gz ${CI_PROJECT_DIR}/
    artifacts:
        paths:
            - 'sklk-phy-modding-manual.pdf'
            - 'sklk-phy-modding-manual-html.tar.gz'

build-sklk-phy-mod:
    stage: build
    tags:
        - docker
    script:
        # Don't install in Dockerfile, we want a recent version
        - apt -y update
        - apt install -y -qq sklk_mii sklk_json sklk_phy
        - mkdir build
        - cd build
        - cmake -DCMAKE_INSTALL_PREFIX=/usr ..
        - fakeroot make -j package
        - rm -vf ${CI_PROJECT_DIR}/sklk_phy_mod*.deb
        - cp -v sklk_phy_mod*.deb ${CI_PROJECT_DIR}/sklk_phy_mod.deb
        # Test package install and python imports
        # Uninstall sklk_json to make sure this brings it in
        - apt-get remove -y sklk_json
        - apt-get install -y ${CI_PROJECT_DIR}/sklk_phy_mod.deb
        # Run tests
        - CTEST_OUTPUT_ON_FAILURE=1 RUN_EXTENDED_TESTS=1 ctest
        # This needs to go to a deploy stage
        # - ${CI_PROJECT_DIR}/scripts/jfrog_upload --type deb ${CI_PROJECT_DIR}/sklk_phy_mod.deb
    artifacts:
        paths:
            - sklk_phy_mod.deb

export-sklk-phy-mod:
    stage: build
    tags:
        - docker
    script:
        - git archive --format "tar.gz" --output "sklk_phy_mod.tar.gz"  `git rev-parse --abbrev-ref HEAD`
    artifacts:
        paths:
            - sklk_phy_mod.tar.gz

test-export-build:
    before_script: []
    stage: test
    variables:
        GIT_STRATEGY: none
    tags:
        - docker
    needs:
        - export-sklk-phy-mod
    script:
        - ls *
        - rm -rf -v !\(sklk_phy_mod.tar.gz\)
        - ls *
        - apt update
        - apt install -y -qq sklk_mii sklk_json sklk_phy
        - tar -xzvf ${CI_PROJECT_DIR}/sklk_phy_mod.tar.gz
        - cmake -S . -B build
        - make -C build -j package

deploy:
    stage: deploy
    tags:
        - docker
    only:
        refs:
            - release
            - main
            - schedules
            - tags
    dependencies:
        - build-manual
        - build-sklk-phy-mod
        - export-sklk-phy-mod
    script:
        - ${CI_PROJECT_DIR}/scripts/jfrog_upload --type deb ${CI_PROJECT_DIR}/sklk_phy_mod.deb
        - ${CI_PROJECT_DIR}/scripts/jfrog_upload ${CI_PROJECT_DIR}/sklk-phy-modding-manual.pdf
        - ${CI_PROJECT_DIR}/scripts/jfrog_upload ${CI_PROJECT_DIR}/sklk-phy-modding-manual-html.tar.gz
        - ${CI_PROJECT_DIR}/scripts/jfrog_upload ${CI_PROJECT_DIR}/sklk_phy_mod.tar.gz

variables:
    GIT_SUBMODULE_STRATEGY: "recursive"
    GIT_DEPTH: "0"
